# Generated by Django 4.2.24 on 2025-10-01 15:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(db_index=True, max_length=20, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('issue_type', models.CharField(choices=[('TASK', 'Task'), ('BUG', 'Bug'), ('STORY', 'Story'), ('EPIC', 'Epic')], max_length=10)),
                ('priority', models.CharField(choices=[('LOWEST', 'Lowest'), ('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('HIGHEST', 'Highest')], default='MEDIUM', max_length=10)),
                ('assignee_id', models.UUIDField(blank=True, db_index=True, null=True)),
                ('reporter_id', models.UUIDField(db_index=True)),
                ('estimate', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subtasks', to='jira.issue')),
            ],
            options={
                'db_table': 'issues',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('key', models.CharField(db_index=True, max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('owner_id', models.UUIDField(db_index=True)),
                ('member_ids', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'projects',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('order', models.IntegerField(default=0)),
                ('is_done', models.BooleanField(default=False)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='jira.project')),
            ],
            options={
                'db_table': 'statuses',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Sprint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('goal', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('FUTURE', 'Future'), ('ACTIVE', 'Active'), ('CLOSED', 'Closed')], default='FUTURE', max_length=10)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sprints', to='jira.project')),
            ],
            options={
                'db_table': 'sprints',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='IssueHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.UUIDField(db_index=True)),
                ('field_name', models.CharField(max_length=50)),
                ('old_value', models.TextField(blank=True)),
                ('new_value', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='jira.issue')),
            ],
            options={
                'db_table': 'issue_history',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='issue',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='jira.project'),
        ),
        migrations.AddField(
            model_name='issue',
            name='sprint',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issues', to='jira.sprint'),
        ),
        migrations.AddField(
            model_name='issue',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='issues', to='jira.status'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_id', models.UUIDField(db_index=True)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='jira.issue')),
            ],
            options={
                'db_table': 'comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='status',
            index=models.Index(fields=['project', 'order'], name='statuses_project_978e24_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='status',
            unique_together={('name', 'project')},
        ),
        migrations.AddIndex(
            model_name='sprint',
            index=models.Index(fields=['project', 'status'], name='sprints_project_d1ab01_idx'),
        ),
        migrations.AddIndex(
            model_name='issuehistory',
            index=models.Index(fields=['issue', '-created_at'], name='issue_histo_issue_i_ec3415_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['project', 'status'], name='issues_project_ba36b7_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['assignee_id'], name='issues_assigne_43044f_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['reporter_id'], name='issues_reporte_91c73f_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['sprint'], name='issues_sprint__476fd7_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['issue', 'created_at'], name='comments_issue_i_added5_idx'),
        ),
    ]
